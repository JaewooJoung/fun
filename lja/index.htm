<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Markdown & Mermaid Editor</title>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/marked/9.1.2/marked.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/mermaid/10.6.1/mermaid.min.js"></script>
    <style>
        * {
            box-sizing: border-box;
            margin: 0;
            padding: 0;
        }

        body {
            font-family: -apple-system, BlinkMacSystemFont, "Segoe UI", Roboto, sans-serif;
            line-height: 1.6;
            padding: 20px;
            background-color: #f5f5f5;
        }

        .container {
            max-width: 1200px;
            margin: 0 auto;
            display: grid;
            grid-template-columns: 1fr 1fr;
            gap: 20px;
            height: calc(100vh - 40px);
        }

        .editor, .preview {
            background: white;
            padding: 20px;
            border-radius: 8px;
            box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);
            overflow-y: auto;
        }

        .editor {
            display: flex;
            flex-direction: column;
        }

        textarea {
            flex-grow: 1;
            padding: 15px;
            border: 1px solid #ddd;
            border-radius: 4px;
            font-family: monospace;
            font-size: 14px;
            resize: none;
        }

        .preview {
            word-wrap: break-word;
        }

        .mermaid {
            background: #fff;
            padding: 10px;
            margin: 15px 0;
            border-radius: 4px;
        }

        /* Markdown Styling */
        .preview h1 { font-size: 2em; margin-bottom: 0.5em; }
        .preview h2 { font-size: 1.5em; margin-bottom: 0.5em; }
        .preview h3 { font-size: 1.3em; margin-bottom: 0.5em; }
        .preview p { margin-bottom: 1em; }
        .preview code {
            background-color: #f4f4f4;
            padding: 2px 4px;
            border-radius: 3px;
            font-family: monospace;
        }
        .preview pre {
            background-color: #f4f4f4;
            padding: 15px;
            border-radius: 4px;
            overflow-x: auto;
            margin-bottom: 1em;
        }
        .preview blockquote {
            border-left: 4px solid #ddd;
            padding-left: 15px;
            color: #666;
            margin-bottom: 1em;
        }
        .preview ul, .preview ol {
            margin-bottom: 1em;
            padding-left: 20px;
        }
    </style>
</head>
<body>
    <div class="container">
        <div class="editor">
            <textarea id="input" placeholder="Enter Markdown or Mermaid diagram here...">
# Welcome to Markdown & Mermaid Editor

## Basic Markdown
This is **bold** and *italic* text.

- List item 1
- List item 2
- List item 3

## Flowchart Example
```mermaid
graph TD
    A[Start] --> B{Decision}
    B -->|Yes| C[Do Something]
    B -->|No| D[Do Nothing]
    C --> E[End]
    D --> E
```

## Sequence Diagram
```mermaid
sequenceDiagram
    participant User
    participant System
    User->>System: Request Data
    System-->>User: Return Data
    User->>System: Process Data
    System-->>User: Confirmation
```

## State Diagram
```mermaid
stateDiagram-v2
    [*] --> Still
    Still --> Moving
    Moving --> Still
    Moving --> Crash
    Crash --> [*]
```
</textarea>
        </div>
        <div class="preview" id="preview"></div>
    </div>

    <script>
        // Initialize Mermaid with specific configuration
        mermaid.initialize({
            startOnLoad: true,
            theme: 'default',
            securityLevel: 'loose',
            htmlLabels: true
        });

        // Custom renderer for marked
        const renderer = new marked.Renderer();
        const originalCodeRenderer = renderer.code.bind(renderer);
        
        renderer.code = (code, language) => {
            if (language === 'mermaid') {
                return `<pre class="mermaid">${code}</pre>`;
            }
            return originalCodeRenderer(code, language);
        };

        // Configure marked
        marked.setOptions({
            renderer: renderer,
            breaks: true,
            gfm: true
        });

        // Function to update preview with proper Mermaid rendering
        async function updatePreview() {
            const input = document.getElementById('input').value;
            const preview = document.getElementById('preview');
            
            // First, render markdown
            preview.innerHTML = marked.parse(input);
            
            // Then, render Mermaid diagrams
            try {
                await mermaid.run({
                    querySelector: '.mermaid'
                });
            } catch (error) {
                console.error('Mermaid rendering error:', error);
            }
        }

        // Add event listener with debounce for better performance
        let timeout;
        document.getElementById('input').addEventListener('input', () => {
            clearTimeout(timeout);
            timeout = setTimeout(updatePreview, 300);
        });

        // Initial render
        updatePreview();
    </script>
</body>
</html>
